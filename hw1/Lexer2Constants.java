/* Generated By:JavaCC: Do not edit this line. Lexer2Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Lexer2Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 5;
  /** RegularExpression Id. */
  int EXTENDS = 6;
  /** RegularExpression Id. */
  int STATIC = 7;
  /** RegularExpression Id. */
  int PUBLIC = 8;
  /** RegularExpression Id. */
  int MAIN = 9;
  /** RegularExpression Id. */
  int VOID = 10;
  /** RegularExpression Id. */
  int BOOLEAN = 11;
  /** RegularExpression Id. */
  int INT = 12;
  /** RegularExpression Id. */
  int DOUBLE = 13;
  /** RegularExpression Id. */
  int STRING = 14;
  /** RegularExpression Id. */
  int TRUE = 15;
  /** RegularExpression Id. */
  int FALSE = 16;
  /** RegularExpression Id. */
  int NEW = 17;
  /** RegularExpression Id. */
  int THIS = 18;
  /** RegularExpression Id. */
  int IF = 19;
  /** RegularExpression Id. */
  int ELSE = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int RETURN = 22;
  /** RegularExpression Id. */
  int SYSTEM = 23;
  /** RegularExpression Id. */
  int OUT = 24;
  /** RegularExpression Id. */
  int PRINTLN = 25;
  /** RegularExpression Id. */
  int ID = 26;
  /** RegularExpression Id. */
  int INTLIT = 27;
  /** RegularExpression Id. */
  int DBLLIT = 28;
  /** RegularExpression Id. */
  int STRLIT = 29;
  /** RegularExpression Id. */
  int ADD = 30;
  /** RegularExpression Id. */
  int SUB = 31;
  /** RegularExpression Id. */
  int MUL = 32;
  /** RegularExpression Id. */
  int DIV = 33;
  /** RegularExpression Id. */
  int AND = 34;
  /** RegularExpression Id. */
  int OR = 35;
  /** RegularExpression Id. */
  int NOT = 36;
  /** RegularExpression Id. */
  int EQ = 37;
  /** RegularExpression Id. */
  int NE = 38;
  /** RegularExpression Id. */
  int LT = 39;
  /** RegularExpression Id. */
  int LE = 40;
  /** RegularExpression Id. */
  int GT = 41;
  /** RegularExpression Id. */
  int GE = 42;
  /** RegularExpression Id. */
  int ASSGN = 43;
  /** RegularExpression Id. */
  int SEMI = 44;
  /** RegularExpression Id. */
  int COMMA = 45;
  /** RegularExpression Id. */
  int DOT = 46;
  /** RegularExpression Id. */
  int LPAREN = 47;
  /** RegularExpression Id. */
  int RPAREN = 48;
  /** RegularExpression Id. */
  int LBRAC = 49;
  /** RegularExpression Id. */
  int RBRAC = 50;
  /** RegularExpression Id. */
  int LCURLY = 51;
  /** RegularExpression Id. */
  int RCURLY = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"class\"",
    "\"extends\"",
    "\"static\"",
    "\"public\"",
    "\"main\"",
    "\"void\"",
    "\"boolean\"",
    "\"int\"",
    "\"double\"",
    "\"String\"",
    "\"true\"",
    "\"false\"",
    "\"new\"",
    "\"this\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"return\"",
    "\"System\"",
    "\"out\"",
    "\"println\"",
    "\"[\\\'a\\\'-\\\'z\\\'|\\\'A\\\'-\\\'Z\\\']+[\\\'0\\\'-\\\'9\\\'|\\\'a\\\'-z\\\'|\\\'A\\\'-\\\'Z\\\']*\"",
    "\"\\\'0\\\'|[\\\'1\\\'-\\\'9\\\']\\\\d*\"",
    "\"\\\\d*.\\\\d*\"",
    "\"\\\"[\\\'a\\\'-\\\'z\\\'|\\\'A\\\'-\\\'Z\\\']*[\\\\d|\\\'a\\\'-\\\'z\\\'|\\\'A\\\'-\\\'Z\\\']*\\\"\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"=\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
  };

}
